async getTargetProfiles(
        ...param: Parameters<typeof LINEStruct.getTargetProfiles_args>
    ): Promise<LINETypes.getTargetProfiles_result["success"]> {
        return await this.client.request.request(
            LINEStruct.getTargetProfiles_args(...param),
            "getTargetProfiles",
            this.protocolType,
            true,
            this.requestPath,
        );
    }

async getRecommendationDetails(
        ...param: Parameters<typeof LINEStruct.getRecommendationDetails_args>
    ): Promise<LINETypes.getRecommendationDetails_result["success"]> {
        return await this.client.request.request(
            LINEStruct.getRecommendationDetails_args(...param),
            "getRecommendationDetails",
            this.protocolType,
            true,
            this.requestPath,
        );
    }

async getContactCalendarEvents(
        ...param: Parameters<typeof LINEStruct.getContactCalendarEvents_args>
    ): Promise<LINETypes.getContactCalendarEvents_result["success"]> {
        return await this.client.request.request(
            LINEStruct.getContactCalendarEvents_args(...param),
            "getContactCalendarEvents",
            this.protocolType,
            true,
            this.requestPath,
        );
    }

async getContactsV3(
        ...param: Parameters<typeof LINEStruct.getContactsV3_args>
    ): Promise<LINETypes.getContactsV3_result["success"]> {
        return await this.client.request.request(
            LINEStruct.getContactsV3_args(...param),
            "getContactsV3",
            this.protocolType,
            true,
            this.requestPath,
        );
    }

async getFriendDetails(
        ...param: Parameters<typeof LINEStruct.getFriendDetails_args>
    ): Promise<LINETypes.getFriendDetails_result["success"]> {
        return await this.client.request.request(
            LINEStruct.getFriendDetails_args(...param),
            "getFriendDetails",
            this.protocolType,
            true,
            this.requestPath,
        );
    }

async addFriendByMid(
        ...param: Parameters<typeof LINEStruct.addFriendByMid_args>
    ): Promise<LINETypes.addFriendByMid_result["success"]> {
        return await this.client.request.request(
            LINEStruct.addFriendByMid_args(...param),
            "addFriendByMid",
            this.protocolType,
            true,
            this.requestPath,
        );
    }